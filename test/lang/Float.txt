namespace lang;

public final class Float {
    public final float value;

    public this(float value) {
        this.value = value;
    }

    public static int floatToIntBits(float value) {
        native (return) {
            return reinterpret_cast<long int>(v_value);
        }
    }

    public static float intBitsToFloat(int value) {
        native (return) {
            return reinterpret_cast<float>(v_value);
        }
    }

    public static bool isInfinity(float value) {
        return false;
    }

    public static bool isNan(float value) {
        return false;
    }

    public static Float parse(string s) {
        return parse(s, false);
    }

    public static Float parse(string s, bool hex) {
        return 0;
    }

    public static string toString(float value) {
        return "";
    }

    public static string toHexString(float value) {
        return "";
    }

    public string toString() {
        return toString(value);
    }

    public int hash() {
        return floatToIntBits(value);
    }

    public bool equals(let Object other) {
        let obj = (Float) other;
        return obj != null && obj.value == value;
    }
}

public static struct float : Float {

    private this() {
    }

    byte operator cast(float value) {
    }
    char operator cast(float value) {
    }
    short operator cast(float value) {
    }
    int operator cast(float value) {
    }
    long operator cast(float value) {
    }
    double operator autocast(float value) {
    }

    bool operator ==(float value, double other) {
    }
    bool operator !=(float value, double other) {
    }
    bool operator >(float value, double other) {
    }
    bool operator <(float value, double other) {
    }
    bool operator >=(float value, double other) {
    }
    bool operator <=(float value, double other) {
    }

    float operator +(float value, float other) {
    }
    float operator -(float value, float other) {
    }
    float operator *(float value, float other) {
    }
    float operator /(float value, float other) {
    }

    double operator +(float value, double other) {
    }
    double operator -(float value, double other) {
    }
    double operator *(float value, double other) {
    }
    double operator /(float value, double other) {
    }

    float operator ++(float value) {
    }
    float operator --(float value) {
    }

    float operator +(float value) {
    }
    float operator -(float value) {
    }
}